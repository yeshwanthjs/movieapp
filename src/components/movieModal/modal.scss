$black: #222;
// Media Queries
// 1. Name and define our breakpoints. Name the map something sensical
// 2. Write a comma separated list of key: value, pairs that we will use later
$breakpoints: (
  x-small: 20em,
  small: 34em,
  large: 60em
);

// if selector is wider than the screensize we are calling
@mixin bp($screen-size) {
  // and if our map that we named $breakpoints includes values (we called them $screen-size)
  @if map-has-key($breakpoints, $screen-size) {
    // then write out a nested Media Query that will target that value as our min-width
    @media (min-width: map-get($breakpoints, $screen-size)) {
      // write CSS within this mixin that would apply to only this breakpoint or above
      @content;
    }
    // if the screen-size we are requesting doesn't exist, then tell me when it is compiled
  } @else {
    // Debugging
    @warn "'#{$screen-size}' has not been declared as a breakpoint.";
  }
}

.modal {
  position: fixed;
  z-index: 999;
  width: 80%;
  height: 90%;
  background-color: white;
  top: 50%;
  left: 50%;
  overflow-y: scroll;
  transform: translate3d(-50%, -50%, 0);
  @include bp(x-small) {
    width: 95%;
  }
  @include bp(small) {
    width: 70%;
  }
  @include bp(large) {
    width: 70%;
  }
  img {
    width: 20%;
    border: 5px solid #fff;
  }
  h2 {
    margin-left: 15%;
    text-align: start;
  }
  .movieDetails {
    margin: 2% !important;
    display: flex;
    // justify-content: space-between;
    // margin: 0px 50px;
    .movieSubDetails {
      text-align: start;
      margin-left: 10%;
    }
  }
  .movieScenes {
    padding: 2%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 8px;
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;

    @include bp(x-small) {
      grid-template-columns: repeat(1, 1fr);
    }
    @include bp(small) {
      grid-template-columns: repeat(2, 1fr);
    }
    // When above our large breakpoint, make sure we have 3 columns
    @include bp(large) {
      grid-template-columns: repeat(5, 1fr);
    }
    img {
      width: 100%;
      border: 5px solid #fff;
    }
    .sceneDetails {
      display: flex;
      justify-content: space-between;
      .likeDetails {
        display: flex;
        svg {
          cursor: pointer;
          margin-top: 33%;
        }
      }
    }
  }
}

.modal-overlay {
  position: fixed;
  z-index: 1;
  height: 100%;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  top: 0;
  left: 0;
}
.modal-body a {
  position: absolute;
  display: inline;
  color: $black;
  text-decoration: none;
  line-height: 36px;
  font-size: 30px;
  font-weight: lighter;
  background: #fff;
  border-radius: 5px;
  height: 40px;
  width: 40px;
  text-align: center;
}
.modal-body .modal-close {
  right: 0;
  top: 0;
  border-radius: 0 0 0 5px;
}
